set(BINARY_DIR "@CMAKE_CURRENT_BINARY_DIR@")
set(ACTUAL_TREE "@CMAKE_INSTALL_PREFIX@")
include("${BINARY_DIR}/check_conf.cmake")

set(fail OFF)

macro(mark_failed msg)
    message(WARNING "FAIL: ${msg}")
    set(fail ON)
endmacro()

macro(check_exists file)
    message(STATUS "Checking for ${file}")
    if (NOT EXISTS ${file})
        mark_failed("File \"${file}\" does not exist")
    endif()
endmacro()

check_exists(${BINARY_DIR}/ECMPoQm/fr/only-process.qm)

set(exp_files
    "share/locale/fr/LC_MESSAGES/process-and-install.qm"
    "share/locale/es/LC_MESSAGES/install-test.qm"
    "share/locale/fr/LC_MESSAGES/install-test.qm"
    "share/locale/en/LC_MESSAGES/catalog.qm"
    "share/locale/en/LC_MESSAGES/catalog2.qm"
    "share/locale/de/LC_MESSAGES/catalog.qm"
    "share/locale/de/LC_MESSAGES/catalog2.qm"
    "custom-dir1/es/LC_MESSAGES/custom-dir1-install-test.qm"
    "custom-dir1/fr/LC_MESSAGES/custom-dir1-install-test.qm"
    "custom-dir2/es/LC_MESSAGES/custom-dir2-install-test.qm"
    "custom-dir2/fr/LC_MESSAGES/custom-dir2-install-test.qm"
)
file(GLOB_RECURSE actual_files RELATIVE "${ACTUAL_TREE}" "${ACTUAL_TREE}/*")
list(SORT exp_files)
list(SORT actual_files)

if(NOT exp_files STREQUAL actual_files)
    foreach(f ${exp_files})
        list(FIND actual_files "${f}" result)
        if(result EQUAL -1)
            message(WARNING "${f} was expected, but not found")
            set(fail ON)
        endif()
    endforeach()
    foreach(f ${actual_files})
        list(FIND exp_files "${f}" result)
        if(result EQUAL -1)
            message(WARNING "${f} was found, but not expected")
            set(fail ON)
        endif()
    endforeach()
else()
    message(STATUS "Installed translations in expected locations")
endif()

# we know we can modify the executable environment on Linux
if("@CMAKE_SYSTEM_NAME@" STREQUAL "Linux")
    set(exp_output_catalog_en "english text:english plural form 5")
    set(exp_output_catalog_de "german text:german plural form 5")
    # no de_AT translation -> should fall back to de
    set(exp_output_catalog_de_AT "${exp_output_catalog_de}")
    # no french translation provided -> english fallback
    set(exp_output_catalog_fr "${exp_output_catalog_en}")

    set(exp_output_catalog2_en "2nd english text:2nd english plural form 5")
    set(exp_output_catalog2_de "2nd german text:2nd german plural form 5")
    # no de_AT translation -> should fall back to de
    set(exp_output_catalog2_de_AT "${exp_output_catalog2_de}")
    # no french translation provided -> english fallback
    set(exp_output_catalog2_fr "${exp_output_catalog2_en}")

    function(check_translations name exec catalog_name)
        foreach(lang en de de_AT fr)
            execute_process(
                COMMAND "${CMAKE_COMMAND}" -E env "XDG_DATA_DIRS=${ACTUAL_TREE}/share"
                    LANG=${lang} "${exec}"
                OUTPUT_VARIABLE output
            )
            string(STRIP "${output}" stripped_output)
            if(NOT stripped_output STREQUAL exp_output_${catalog_name}_${lang})
                message(WARNING "${name}[${lang}] output was \"${stripped_output}\", but expected \"${exp_output_${catalog_name}_${lang}}\"")
                set(fail ON PARENT_SCOPE)
            else()
                message(STATUS "${name}[${lang}] output was \"${stripped_output}\", as expected")
            endif()
        endforeach()
    endfunction()

    check_translations(TR_TEST "${TR_TEST_EXEC}" catalog)
    check_translations(TR_TEST_TARGET "${TR_TEST_TARGET_EXEC}" catalog)
    check_translations(TR_TEST_2 "${TR_TEST_2_EXEC}" catalog2)

    check_translations(TR_TEST_SUBDIR "${TR_TEST_SUBDIR_EXEC}" catalog)

    check_translations(TR_THREAD_TEST "${TR_THREAD_TEST_EXEC}" catalog)
    check_translations(TR_THREAD_TEST_2 "${TR_THREAD_TEST_2_EXEC}" catalog2)
endif()

if (fail)
    message(FATAL_ERROR "Test failed!")
endif()
